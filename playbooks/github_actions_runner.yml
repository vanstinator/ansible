---
- hosts: all

  vars:
    gh_runner_version: "2.321.0"
    gh_runner_installation_path: "/Users/runner/actions-runner"
    gh_runner_tokens:
      ci-01: "{{ lookup('ansible.builtin.env', 'GH_RUNNER_TOKEN_01') }}"
      ci-02: "{{ lookup('ansible.builtin.env', 'GH_RUNNER_TOKEN_02') }}"
      ci-03: "{{ lookup('ansible.builtin.env', 'GH_RUNNER_TOKEN_03') }}"
    gh_runner_config_url: "{{lookup('ansible.builtin.env', 'GH_RUNNER_URL')}}"
    gh_runner_config_token: "{{ gh_runner_tokens[(group_names | intersect(gh_runner_tokens.keys())).0] }}"

  pre_tasks:
    - name: Debug GH_RUNNER_URL environment variable
      ansible.builtin.debug:
        msg: "GH_RUNNER_URL is {{ lookup('ansible.builtin.env', 'GH_RUNNER_URL') }}"

  roles:
    - role: macunha1.github_actions_runner
      vars:
        tmp_download_path: "/Users/runner/Downloads"

        gh_runner_architecture: "osx-arm64"

        gh_runner_config_labels:
          - macos
          - self-hosted
        gh_runner_installation_path: "/Users/runner/actions-runner"
        gh_runner_workspace_path: "/Users/runner/actions-runner/_work"
        gh_runner_service_user: "runner"

        # remove once we're done building this out
        gh_runner_config_name: "{{(group_names | intersect(gh_runner_tokens.keys())).0}}"

  tasks:
    - name: Autologin runner user
      ansible.builtin.shell: |
        sudo sysadminctl -autologin set -userName runner -password {{lookup('ansible.builtin.env', 'SUDO_PASSWORD')}}

    - name: Remove the .env file if it exists
      ansible.builtin.file:
        path: "/Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}/.env"
        state: absent

    - name: Replace the .env file with the contents of the .zshenv file without "export " strings and skip PATH variable
      ansible.builtin.shell: |
        grep '^export ' /Users/runner/.zshenv | sed '/^export PATH=/d; s/^export //' > /Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}/.env
        echo "$PATH" > /Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}/.path

    - name: Create the restart.sh script
      ansible.builtin.copy:
        content: |
          #!/bin/bash

          shopt -u huponexit

          cleanup_and_restart() {
            cd /Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}
            sh -c 'tail -f _diag/$(cd _diag && ls -t | grep Worker | head -1) | { sed "/.*Raising job completed.*/ q" && kill $$ ;}'
            #sleep 1
            ./svc.sh stop
            sudo shutdown -r +2s
          }

          echo "$@" | grep -q -- "--nohup" && cleanup_and_restart || nohup $0 "$@" --nohup &
        dest: "/Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}/restart.sh"
        mode: "0755"

    - name: Add the ACTIONS_RUNNER_HOOK_JOB_COMPLETED to the .env file if it doesn't exist
      ansible.builtin.shell: |
        grep -q '^ACTIONS_RUNNER_HOOK_JOB_COMPLETED=' /Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}/.env || echo 'ACTIONS_RUNNER_HOOK_JOB_COMPLETED=/Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}/restart.sh' >> /Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}/.env

    - name: Restart the runner service
      ansible.builtin.shell: |
        cd /Users/runner/actions-runner/{{ gh_runner_version }}/{{ gh_runner_config_url | hash('sha256') }}
        ./svc.sh stop
        sleep 7
        ./svc.sh start
