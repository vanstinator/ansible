---
- name: Install Android SDK and NDK
  hosts: all
  # become: yes
  vars:
    user: "runner"
    android_sdk_version: "11076708"
    android_sdk_checksum: "sha256:7bc5c72ba0275c80a8f19684fb92793b83a6b5c94d4d179fc5988930282d7e64"
    android_build_tools_version: "34.0.0"
    android_platform_versions:
      - "android-34"
      - "android-35"
    android_ndk_version: "25.2.9519653"
    android_sdk_path: "/Users/{{user}}/Library/Android/sdk"
    android_ndk_path: "{{ android_sdk_path }}/ndk/{{ android_ndk_version }}"

  tasks:     
    - name: Make users passwordless for sudo in group runner
      become: yes
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%admin'
        line: '%admin ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: brew iInstall Temurin JDK 17
      community.general.homebrew:
        name: 
          - temurin@17
        state: present

    - name: brew install additional dependencies
      homebrew:
        name:
          - unzip
          - gnu-tar
        state: present
        update_homebrew: yes

    - name: Download Android SDK tools
      get_url:
        url: "https://dl.google.com/android/repository/commandlinetools-mac-{{ android_sdk_version }}_latest.zip"
        dest: "/tmp/android-sdk.zip"
        checksum: "{{android_sdk_checksum}}"

    - name: Create Android SDK directory
      file:
        path: "{{ android_sdk_path }}"
        state: directory
        mode: '0755'

    - name: Create Android SDK cmdline-tools directory
      file:
        path: "{{ android_sdk_path }}/cmdline-tools"
        state: directory
        mode: '0755'

    - name: Extract Android SDK tools
      unarchive:
        src: "/tmp/android-sdk.zip"
        dest: "{{ android_sdk_path }}/cmdline-tools"
        remote_src: yes

    - name: Rename cmdline-tools directory
      command: mv {{ android_sdk_path }}/cmdline-tools/cmdline-tools {{ android_sdk_path }}/cmdline-tools/latest
      args:
        creates: "{{ android_sdk_path }}/cmdline-tools/latest"

    - name: Set up Android SDK environment variables
      lineinfile:
        path: "{{ ansible_env.HOME }}/.zshenv"
        line: "{{ item }}"
        create: yes
      loop:
        - "export ANDROID_HOME={{ android_sdk_path }}"
        - "export ANDROID_NDK_HOME={{ android_ndk_path }}"
        - "export PATH={{ android_sdk_path }}/cmdline-tools/latest/bin:{{ android_sdk_path }}/platform-tools:{{ android_ndk_path }}:/opt/homebrew/opt/gnu-tar/libexec/gnubin:$PATH"

    - name: Reset SSH Connection
      ansible.builtin.meta: reset_connection

    - name: Log the path
      debug:
        msg: "{{ ansible_env.PATH }}"

    # - name: Accept Android SDK licenses
    #   command: "yes | {{ android_sdk_path }}/cmdline-tools/latest/bin/sdkmanager --licenses || true"
    #   changed_when: false

    - name: Install Android SDK components and NDK
      command: >
        {{ android_sdk_path }}/cmdline-tools/latest/bin/sdkmanager 
        "platform-tools" 
        "build-tools;{{ android_build_tools_version }}"
        "ndk;{{ android_ndk_version }}"
      changed_when: false

    - name: Install Android SDK platforms
      command: "{{ android_sdk_path }}/cmdline-tools/latest/bin/sdkmanager 'platforms;{{ item }}'"
      loop: "{{ android_platform_versions }}"
      changed_when: false

    - name: Uninstall Android SDK platforms not in the desired list
      command: "{{ android_sdk_path }}/cmdline-tools/latest/bin/sdkmanager --uninstall 'platforms;{{ item }}'"
      loop: "{{ sdk_list.stdout_lines | select('match', '^  platforms;android-') | map('regex_replace', '^  platforms;(android-[0-9]+)', '\\1') | difference(android_platform_versions) }}"
      when: item is defined
      changed_when: false


    - name: Ensure correct permissions for Android SDK directory
      file:
        path: "{{ android_sdk_path }}"
        state: directory
        recurse: yes
        owner: "{{ ansible_user_id }}"
        group: "staff"
        mode: 'u+rwX,g+rX,o+rX'
